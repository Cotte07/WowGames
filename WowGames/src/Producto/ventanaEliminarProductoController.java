package Producto;

import java.io.IOException;
import java.util.LinkedList;

import BaseDatos.Datos;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseEvent;
import javafx.stage.Stage;
import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

/**Clase del controlador de la ventanba eliminar producto
 * 
 * 
 *
 */
public class ventanaEliminarProductoController {
	@FXML
	private Button regresarBtn;
	@FXML
	private Button eliminarBtn;
	@FXML
	private TableView<Productos> tablaEliminarProducto;
	@FXML
	private TableColumn<Productos, String> referenciaColumn;
	@FXML
	private TableColumn<Productos, String> nombreColumn;
	@FXML
	private TableColumn<Productos, Float> ivaColumn;
	@FXML
	private TableColumn<Productos, String> tipoProductoColumn;
	@FXML
	private TableColumn<Productos, Float> impuestoColumn;
	@FXML
	private TableColumn<Productos, String> tipoJuegoColumn;
	@FXML
	private TableColumn<Productos, Float> valorColumn;
	@FXML
	private TableColumn<Productos, String> plataformaColumn;
	@FXML
	private Button visualizarBtn;
	private Datos dataprovider = new Datos();
	private ObservableList<Productos> data = FXCollections.observableArrayList();
	
	

	// Event Listener on Button[#regresarBtn].onMouseClicked
	@FXML
	public void onRegresarClicked(MouseEvent event) {
		// TODO Autogenerated
		
		Parent root = null;
	    try {
	        root = FXMLLoader.load(getClass().getResource("/Presentacion/ventanaOpciones.fxml"));
	        Scene scene = new Scene(root);
	        
	        // Obt√©n el escenario actual usando el evento
	        Stage currentStage = (Stage) ((Node) event.getSource()).getScene().getWindow();
	        
	        // Configura el nuevo escenario
	        Stage newStage = new Stage();
	        newStage.setScene(scene);
	        
	        // Titulo de la ventana
	        newStage.setTitle("WowGames: VentanaOpciones");
	        
	        // Muestra el nuevo escenario
	        newStage.show();
	        
	        // Cierra el escenario actual
	        currentStage.close();
	        
	    } catch (IOException e) {
	        // TODO Auto-generated catch block
	        e.printStackTrace();
	    }
	}
	// Event Listener on Button[#eliminarBtn].onMouseClicked
	/**Metodo para eliminar productos
	 * 
	 * @param event
	 */
	@FXML
	public void onEliminarClicked(MouseEvent event) {
		// TODO Autogenerated
		Productos todelete = this.tablaEliminarProducto.getSelectionModel().getSelectedItem();
		this.dataprovider.deleteProducto(todelete);
		this.data.remove(todelete);
	}
	// Event Listener on Button[#visualizarBtn].onMouseClicked
	/**Metodo para mostrar los productos
	 * 
	 * @param event
	 */
	@FXML
	public void onVisualizarClicked(MouseEvent event) {
		// TODO Autogenerated
		this.referenciaColumn.setCellValueFactory(new PropertyValueFactory<Productos, String>("referencia"));
		this.ivaColumn.setCellValueFactory(new PropertyValueFactory<Productos, Float>("iva"));
		this.tipoProductoColumn.setCellValueFactory(new PropertyValueFactory<Productos, String>("tipoProducto"));
		this.tipoJuegoColumn.setCellValueFactory(new PropertyValueFactory<Productos, String>("tipoJuego"));
		this.nombreColumn.setCellValueFactory(new PropertyValueFactory<Productos, String>("nombre"));
		this.valorColumn.setCellValueFactory(new PropertyValueFactory<Productos, Float>("valorUnitario"));
		this.impuestoColumn.setCellValueFactory(new PropertyValueFactory<Productos, Float>("impuesto"));
		this.plataformaColumn.setCellValueFactory(new PropertyValueFactory<Productos, String>("plataforma"));
		LinkedList<Productos> temp = this.dataprovider.getDatos();
		for(Productos item: temp) {
			this.data.add(item);
		}
		this.tablaEliminarProducto.setItems(data);
	}
}
