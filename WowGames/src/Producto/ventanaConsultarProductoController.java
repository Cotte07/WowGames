package Producto;

import java.util.LinkedList;

import BaseDatos.Datos;
import BaseDatos.Productos;
import BaseDatos.sesion;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseEvent;

import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

public class ventanaConsultarProductoController {
	@FXML
	private Button regresarBtn;
	@FXML
	private TableView<Productos> tablaConsultarProducto;
	@FXML
	private TableColumn<Productos, String> referenciaColumn;
	@FXML
	private TableColumn<Productos, String> nombreColumn;
	@FXML
	private TableColumn<Productos, Float> ivaColumn;
	@FXML
	private TableColumn<Productos, String> tipoProductoColumn;
	@FXML
	private TableColumn<Productos, Float> impuestoColumn;
	@FXML
	private TableColumn<Productos, String> tipoJuegoColumn;
	@FXML
	private TableColumn<Productos, Float> valorColumn;
	@FXML
	private TableColumn<Productos, String> plataformaColumn;
	@FXML
	private TextField referenciaTxt;
	@FXML
	private Button consultarBtn;
	private ObservableList<Productos> data = FXCollections.observableArrayList();
	
	private Datos dataprovider;
	private Datos dataprovider1 = new Datos();

	// Event Listener on Button[#regresarBtn].onMouseClicked
	@FXML
	public void onRegresarClicked(MouseEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#consultarBtn].onMouseClicked
	@FXML
	public void onConsultarClicked(MouseEvent event) {
		// TODO Autogenerated
		Productos producto = dataprovider1.consulta(referenciaTxt.getText());
		if(producto !=null) {
			sesion.setProducto(producto);
			this.dataprovider = new Datos();
			this.referenciaColumn.setCellValueFactory(new PropertyValueFactory<Productos, String>("referencia"));
			this.ivaColumn.setCellValueFactory(new PropertyValueFactory<Productos, Float>("iva"));
			this.tipoProductoColumn.setCellValueFactory(new PropertyValueFactory<Productos, String>("tipoProducto"));
			this.tipoJuegoColumn.setCellValueFactory(new PropertyValueFactory<Productos, String>("tipoJuego"));
			this.nombreColumn.setCellValueFactory(new PropertyValueFactory<Productos, String>("nombre"));
			this.valorColumn.setCellValueFactory(new PropertyValueFactory<Productos, Float>("valor"));
			this.impuestoColumn.setCellValueFactory(new PropertyValueFactory<Productos, Float>("impuesto"));
			this.plataformaColumn.setCellValueFactory(new PropertyValueFactory<Productos, String>("plataforma"));
			LinkedList<Productos> temp = this.dataprovider.getDatos();
			for(Productos item: temp) {
				this.data.add(item);
			}
			this.tablaConsultarProducto.setItems(data);
			
		}else {
			Alert alt = new Alert(Alert.AlertType.ERROR);
			alt.setContentText("No se encontr√≥ el producto");
			alt.setHeaderText("Error");
			alt.show();
		}
		
		
		
		
	}
}
