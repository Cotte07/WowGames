package Facturas;

import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.LinkedList;

import BaseDatos.Datos;
import Cliente.Clientes;
import Producto.Productos;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseEvent;
import javafx.stage.Stage;
import javafx.scene.control.CheckBox;

import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

/**Clase de el controlador de la ventana registrar factura
 * 
 * 
 *
 */
public class ventanaRegistrarFacturaController {
	@FXML
	private TextField codigoProductoTxt;
	@FXML
    private TextField cantidadTxt;
	@FXML
	private TextField nombreTxt;
	@FXML
	private TextField apellidoTxt;
	@FXML
	private TextField identificacionTxt;
	@FXML
	private TextField telefonoTxt;
	 @FXML
	private TextField direccionTxt;
	@FXML
    private TextField credencialVendedorTxt;
	@FXML
	private TableView<Productos> registrarVentaTable;
	@FXML
	private TableColumn<Productos, Float> ivaColumn;
	@FXML
	private TableColumn<Productos, String> referenciaColumn;
	@FXML
	private TableColumn<Productos, String> tipoProductoColumn;
	@FXML
	private TableColumn<Productos, String> tipoJuegoColumn;
	@FXML
	private TableColumn<Productos, String> nombreProductoColumn;
	@FXML
	private TableColumn<Productos, String> plataformaColumn;
	@FXML
	private TableColumn<Productos, String> precioColumn;
	@FXML
	private TableColumn<Productos, Float> impuestoColumn;
	@FXML
	private TableColumn<Productos, Float> valorColumn;
	@FXML
	private TableColumn<?, ?> cantidadColumn;
	 @FXML
	private TableColumn<?, ?> totalColumn;
	@FXML
	private Button ingresarBtn;
	@FXML
	private Button regresarBtn;
	@FXML
	private CheckBox descuentoBox;
	@FXML
	private Button generarFacturaBtn;
	
	private Datos dataProvider = new Datos();
	private Datos dataProvider1 = new Datos();
	private ObservableList<Productos> data = FXCollections.observableArrayList();
	
	private float id; 
	private String fecha;
	private float subtotal;
	private float valorTotal;
	private float descuento;
	private String crendencialVendedor;
	private String identificacionCliente;
	private Float idFac = null;
	

	// Event Listener on TableView[#registrarVentaTable].onMouseClicked
	@FXML
	public void onSelection(MouseEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#ingresarBtn].onMouseClicked
	/**Metodo que muestra los datos del producto
	 * 
	 * @param event
	 */
	@FXML
	public void onIngresarClicked(MouseEvent event) {
		// TODO Autogenerated
		this.referenciaColumn.setCellValueFactory(new PropertyValueFactory<Productos, String>("referencia"));
		this.ivaColumn.setCellValueFactory(new PropertyValueFactory<Productos, Float>("iva"));
		this.tipoProductoColumn.setCellValueFactory(new PropertyValueFactory<Productos, String>("tipoProducto"));
		this.tipoJuegoColumn.setCellValueFactory(new PropertyValueFactory<Productos, String>("tipoJuego"));
		this.nombreProductoColumn.setCellValueFactory(new PropertyValueFactory<Productos, String>("nombre"));
		this.valorColumn.setCellValueFactory(new PropertyValueFactory<Productos, Float>("valorUnitario"));
		this.impuestoColumn.setCellValueFactory(new PropertyValueFactory<Productos, Float>("impuesto"));
		this.plataformaColumn.setCellValueFactory(new PropertyValueFactory<Productos, String>("plataforma"));
		LinkedList<Productos> temp = this.dataProvider1.getDatos();
		for(Productos item: temp) {
			this.data.add(item);
		}
		this.registrarVentaTable.setItems(data);
	}
	// Event Listener on Button[#regresarBtn].onMouseClicked
	@FXML
	public void onRegresarClicked(MouseEvent event) {
		Parent root = null;
	    try {
	        root = FXMLLoader.load(getClass().getResource("/Presentacion/ventanaOpcionesVendedor.fxml"));
	        Scene scene = new Scene(root);
	        
	        // Obt√©n el escenario actual usando el evento
	        Stage currentStage = (Stage) ((Node) event.getSource()).getScene().getWindow();
	        
	        // Configura el nuevo escenario
	        Stage newStage = new Stage();
	        newStage.setScene(scene);
	        
	        //Agregar titulo a la ventana
	        newStage.setTitle("WowGames: VentanaOpciones");
	        
	        // Muestra el nuevo escenario
	        newStage.show();
	        
	        // Cierra el escenario actual
	        currentStage.close();
	        
	    } catch (IOException e) {
	        // TODO Auto-generated catch block
	        e.printStackTrace();
	    }
		
		// TODO Autogenerated
	}
	
	
	
	
	
	// Event Listener on Button[#generarFacturaBtn].onMouseClicked
	/**Metodo que genera el id de las facturas automaticamente, calcula la fecha actual y calcula el subtotal de la factura
	 * 
	 * @param event
	 */
	@FXML
	public void onGenerarClicked(MouseEvent event) {
		// TODO Autogenerated
		
		
		//se genera automaticamente el ID de cada factura
	if(idFac == null) {
				idFac = (float) 1;
			}else {
				Datos datos = new Datos(); 
		        Facturas resultado = null;
		        resultado = datos.consultarId(resultado);
		        
		        idFac = resultado.getId() + 1; 
			}
		
		//se calcula la fecha
		LocalDate fechaActual = LocalDate.now();
    	DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd-MM-yyyy");
	    String fecha = fechaActual.format(formato);
		
	    //se calcula el subtotal
	    
	    
		Facturas nuevo = new Facturas(idFac, fecha, subtotal, valorTotal,descuento, crendencialVendedor, identificacionCliente );
		boolean success = this.dataProvider.createFactura(nuevo);
		if (success) {
			Alert alt = new Alert(Alert.AlertType.INFORMATION);
			alt.setContentText("Factura Creada");
			alt.setHeaderText("Creado");
			alt.show();
		}else {
			Alert alt = new Alert(Alert.AlertType.ERROR);
			alt.setContentText("Error al crear el factura");
			alt.setHeaderText("Error");
			alt.show();
		}
		
		
	}
}
